// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.154.0/containers/swift
{
  "name": "Swift",
  "build": {
    "dockerfile": "Dockerfile",
    "args": {
      // Update the VARIANT arg to pick a Swift version
      "VARIANT": "5.5",
      // Options
      "INSTALL_NODE": "false",
      "NODE_VERSION": "lts/*"
    }
  },
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
  ],

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash",
    "lldb.adapterType": "bundled",
    "lldb.executable": "/usr/bin/lldb",
    "sde.languageservermode": "sourcekite",
    "sourcekit-lsp.serverPath": "/usr/bin/sourcekit-lsp",
    "swift.path.sourcekite": "/usr/local/bin/sourcekite",
    "sde.swiftBuildingParams": [
      "build",
      "--enable-test-discovery",
      "--build-tests"
    ]
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "vknabel.vscode-swift-development-environment",
    "vknabel.vscode-apple-swift-format",
    "vadimcn.vscode-lldb",
    "humao.rest-client"
  ],

  // Add WORKSPACE to be able to mount host folders when running docker inside container
  "remoteEnv": {
    "WORKSPACE": "${localWorkspaceFolder}",
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "swiftc --version",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  //"remoteUser": "vscode"
}
